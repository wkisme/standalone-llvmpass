; ModuleID = 'flavor.bc'
source_filename = "flavor.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"%d %d %d %d\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fetch() #0 {
entry:
  %value = alloca i32, align 4
  %call = call i32 (ptr, ...) @__isoc99_scanf(ptr noundef @.str, ptr noundef %value)
  %0 = load i32, ptr %value, align 4
  ret i32 %0
}

declare i32 @__isoc99_scanf(ptr noundef, ...) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %red = alloca i32, align 4
  %green = alloca i32, align 4
  %blue = alloca i32, align 4
  %yellow = alloca i32, align 4
  %sweet = alloca i32, align 4
  %sour = alloca i32, align 4
  %salty = alloca i32, align 4
  %bitter = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, ptr %retval, align 4
  %call = call i32 @fetch()
  store i32 %call, ptr %red, align 4
  %call1 = call i32 @fetch()
  store i32 %call1, ptr %blue, align 4
  %call2 = call i32 @fetch()
  store i32 %call2, ptr %green, align 4
  %call3 = call i32 @fetch()
  store i32 %call3, ptr %yellow, align 4
  %0 = load i32, ptr %red, align 4
  %mul = mul nsw i32 2, %0
  store i32 %mul, ptr %red, align 4
  %1 = load i32, ptr %red, align 4
  %2 = load i32, ptr %green, align 4
  %mul4 = mul nsw i32 %1, %2
  store i32 %mul4, ptr %sweet, align 4
  store i32 0, ptr %sour, align 4
  store i32 0, ptr %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, ptr %i, align 4
  %4 = load i32, ptr %red, align 4
  %cmp = icmp slt i32 %3, %4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load i32, ptr %green, align 4
  %6 = load i32, ptr %sour, align 4
  %add = add nsw i32 %6, %5
  store i32 %add, ptr %sour, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %7 = load i32, ptr %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, ptr %i, align 4
  br label %for.cond, !llvm.loop !6

for.end:                                          ; preds = %for.cond
  %8 = load i32, ptr %blue, align 4
  %9 = load i32, ptr %yellow, align 4
  %add5 = add nsw i32 %8, %9
  store i32 %add5, ptr %salty, align 4
  %10 = load i32, ptr %green, align 4
  %add6 = add nsw i32 %10, 1
  store i32 %add6, ptr %green, align 4
  %11 = load i32, ptr %yellow, align 4
  %12 = load i32, ptr %green, align 4
  %add7 = add nsw i32 %11, %12
  store i32 %add7, ptr %bitter, align 4
  %13 = load i32, ptr %sweet, align 4
  %14 = load i32, ptr %sour, align 4
  %15 = load i32, ptr %salty, align 4
  %16 = load i32, ptr %bitter, align 4
  %call8 = call i32 (ptr, ...) @printf(ptr noundef @.str.1, i32 noundef %13, i32 noundef %14, i32 noundef %15, i32 noundef %16)
  call void @exit(i32 noundef 0) #3
  unreachable
}

declare i32 @printf(ptr noundef, ...) #1

; Function Attrs: noreturn nounwind
declare void @exit(i32 noundef) #2

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { noreturn nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{!"clang version 18.1.4"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.mustprogress"}
